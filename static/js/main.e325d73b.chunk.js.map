{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Statistic/Statistic.module.css","components/Profile/Profile.jsx","components/Statistic/Statistic.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","ProfilePage","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","stats_item","label","quantity","getRandomColor","color","i","Math","floor","random","StatisticPage","title","statisticalData","statistics","stat_list","map","item","style","backgroundColor","percentage","id","FriendListItem","status","isOnline","online","offline","width","FriendList","friends","friend_list","TransactionHistory","transactions","transaction_history","transaction_head","transaction_row","transaction_itemHead","transaction_table","type","amount","currency","transaction_item","App","Profile","Statistic","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,MAAQ,uBAAuB,WAAa,4BAA4B,MAAQ,uBAAuB,SAAW,4B,gBCAhRD,EAAOC,QAAU,CAAC,oBAAsB,gDAAgD,iBAAmB,6CAA6C,qBAAuB,iDAAiD,iBAAmB,6CAA6C,gBAAkB,8C,gBCAlTD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,KAAO,yBAAyB,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,2BAA2B,QAAU,8B,gBCAlND,EAAOC,QAAU,CAAC,WAAa,8BAA8B,MAAQ,yBAAyB,UAAY,6BAA6B,KAAO,wBAAwB,WAAa,gC,4sGC+CpKC,EA7CK,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACpCC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACA,sBAAKC,UAAWC,IAAOC,QAAvB,UACA,sBAAKF,UAAWC,IAAOE,YAAvB,UACI,qBACIC,IAAKT,EACLU,IAAKb,EACLQ,UAAWC,IAAON,SAEtB,mBAAGK,UAAWC,IAAOT,KAArB,SAA4BA,IACpB,oBAAGQ,UAAWC,IAAOR,IAArB,cAA4BA,KAC5B,mBAAGO,UAAWC,IAAOP,SAArB,SAAgCA,OAEpC,qBAAIM,UAAWC,IAAOL,MAAtB,UACJ,qBAAII,UAAWC,IAAOK,WAAtB,UACA,sBAAMN,UAAWC,IAAOM,MAAxB,yBACI,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCX,OAEvC,qBAAIG,UAAWC,IAAOK,WAAtB,UACA,sBAAMN,UAAWC,IAAOM,MAAxB,qBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCV,OAEnC,qBAAIE,UAAWC,IAAOK,WAAtB,UACI,sBAAMN,UAAWC,IAAOM,MAAxB,qBACJ,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,c,gBCzB/C,SAASU,IAGP,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHY,mBAGKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,EAGT,IA4BeK,EA5BO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAC5B,OACI,0BAASjB,UAAWC,IAAOiB,WAA3B,UACKF,GAAS,oBAAIhB,UAAWC,IAAOe,MAAtB,SAA8BA,IACxC,oBAAIhB,UAAWC,IAAOkB,UAAtB,SACKF,EAAgBG,KAAI,SAACC,GAAD,OACzB,qBAAIrB,UAAWC,IAAOoB,KAAoBC,MAAO,CAACC,gBAAiBd,KAAnE,UACI,sBAAMT,UAAWC,IAAOM,MAAxB,SAAgCc,EAAKd,QACrC,uBAAMP,UAAWC,IAAOuB,WAAxB,UAAqCH,EAAKG,WAA1C,UAF6BH,EAAKI,a,gBCLnCC,EAXQ,SAAC,GAAgC,IAA9B/B,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KACxBmC,EAD6C,EAAfC,SACV3B,IAAO4B,OAAS5B,IAAO6B,QACjD,OACI,qBAAI9B,UAAWC,IAAOoB,KAAtB,UACI,sBAAMrB,UAAW2B,IACjB,qBAAK3B,UAAWC,IAAON,OAAQS,IAAKT,EAAQU,IAAKb,EAAMuC,MAAM,OAC7D,mBAAG/B,UAAWC,IAAOT,KAArB,SAA4BA,QCiBzBwC,EArBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACI,oBAAIjC,UAAWC,IAAOiC,YAAtB,SACKD,EAAQb,KAAI,gBAAGK,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,OAAQH,EAAf,EAAeA,KAAMoC,EAArB,EAAqBA,SAArB,OACT,cAAC,EAAD,CAAyBjC,OAAQA,EAAQH,KAAMA,EAAMoC,SAAUA,GAA1CH,S,gBC6BtBU,EAlCY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACA,wBAAOpC,UAAWC,IAAOoC,oBAAzB,UACI,uBAAOrC,UAAWC,IAAOqC,iBAAzB,SACQ,qBAAItC,UAAWC,IAAOsC,gBAAtB,UACA,oBAAIvC,UAAWC,IAAOuC,qBAAtB,kBACA,oBAAIxC,UAAWC,IAAOuC,qBAAtB,oBACA,oBAAIxC,UAAWC,IAAOuC,qBAAtB,2BAGJ,uBAAOxC,UAAWC,IAAOwC,kBAAzB,SACKL,EAAahB,KAAI,gBAAGK,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OAClB,qBAAI5C,UAAWC,IAAOsC,gBAAtB,UACI,oBAAIvC,UAAWC,IAAO4C,iBAAtB,SAAyCH,IACzC,oBAAI1C,UAAWC,IAAO4C,iBAAtB,SAAyCF,IACzC,oBAAI3C,UAAWC,IAAO4C,iBAAtB,SAAyCD,MAHDnB,YCK7CqB,EARH,kBACV,qCACE,cAACC,EAAD,CAAavD,KAAMU,EAAQV,KAAMC,IAAKS,EAAQT,IAAKC,SAAUQ,EAAQR,SAAUC,OAAQO,EAAQP,OAAQC,MAAOM,EAAQN,QACtH,cAACoD,EAAD,CAAehC,MAAM,eAAeC,gBAAiBA,IACrD,cAAC,EAAD,CAAYgB,QAASA,IACrB,cAAC,EAAD,CAAoBG,aAAcA,QCXtCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e325d73b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__vT9JF\",\"profile\":\"Profile_profile__1uUZF\",\"description\":\"Profile_description__23raQ\",\"name\":\"Profile_name__wLi5S\",\"stats\":\"Profile_stats__VpGNM\",\"stats_item\":\"Profile_stats_item__krtp3\",\"label\":\"Profile_label__39mbI\",\"quantity\":\"Profile_quantity__3I4jx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__3RPhC\",\"transaction_head\":\"TransactionHistory_transaction_head__2WE4a\",\"transaction_itemHead\":\"TransactionHistory_transaction_itemHead__1l_eF\",\"transaction_item\":\"TransactionHistory_transaction_item__1drf5\",\"transaction_row\":\"TransactionHistory_transaction_row__3aBnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__2vYpX\",\"item\":\"FriendList_item__1FN7g\",\"name\":\"FriendList_name__3GJGS\",\"avatar\":\"FriendList_avatar__1y9i4\",\"online\":\"FriendList_online__27PQ2\",\"offline\":\"FriendList_offline__2Uwh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__n6JkO\",\"title\":\"Statistic_title__ZRmeo\",\"stat_list\":\"Statistic_stat_list__1O0EM\",\"item\":\"Statistic_item__3Ulqk\",\"percentage\":\"Statistic_percentage__36xqe\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./Profile.module.css\"\r\n\r\nconst ProfilePage = ({ name, tag, location, avatar, stats }) => {\r\n        const { followers, views, likes } = stats\r\n        return (\r\n        <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n            <img\r\n                src={avatar}\r\n                alt={name}\r\n                className={styles.avatar}\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n                    <p className={styles.tag}>@{tag}</p>\r\n                    <p className={styles.location}>{location}</p>\r\n        </div>\r\n                <ul className={styles.stats}>\r\n            <li className={styles.stats_item}>\r\n            <span className={styles.label}>Followers |</span>\r\n                <span className={styles.quantity}>{followers}</span>\r\n            </li>\r\n            <li className={styles.stats_item}>\r\n            <span className={styles.label}>Views |</span>\r\n            <span className={styles.quantity}>{views}</span>\r\n            </li>\r\n            <li className={styles.stats_item}>\r\n                <span className={styles.label}>Likes |</span>\r\n            <span className={styles.quantity}>{likes}</span>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n        )}\r\n\r\nProfilePage.propTypes = {\r\n    profile:PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        tag: PropTypes.string.isRequired,\r\n        location: PropTypes.string.isRequired,\r\n        avatar: PropTypes.string.isRequired,\r\n        stats: PropTypes.shape({\r\n            followers: PropTypes.number.isRequired,\r\n            views: PropTypes.number.isRequired,\r\n            likes: PropTypes.number.isRequired,\r\n        })\r\n        })\r\n}      \r\n\r\nexport default ProfilePage;\r\n\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Statistic.module.css\"\r\n\r\nfunction getRandomColor() {\r\n  let letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nconst StatisticPage = ({ title, statisticalData }) => {\r\n    return (\r\n        <section className={styles.statistics}>\r\n            {title && <h2 className={styles.title}>{title}</h2>}\r\n            <ul className={styles.stat_list}>\r\n                {statisticalData.map((item) => (\r\n            <li className={styles.item} key={item.id} style={{backgroundColor: getRandomColor()}}>\r\n                <span className={styles.label}>{item.label}</span>\r\n                <span className={styles.percentage}>{item.percentage} %</span>\r\n            </li>\r\n                    \r\n                ))}\r\n        </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nStatisticPage.propTypes = {\r\n    title: PropTypes.string,\r\n    statisticalData: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }).isRequired\r\n    ),\r\n};\r\n\r\nexport default StatisticPage;","import styles from \"./FriendList.module.css\"\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n    const status = isOnline ? styles.online : styles.offline\r\n    return (\r\n        <li className={styles.item}>\r\n            <span className={status}></span>\r\n            <img className={styles.avatar} src={avatar} alt={name} width=\"54\" />\r\n            <p className={styles.name}>{name}</p>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default FriendListItem","import PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\"\r\nimport styles from \"./FriendList.module.css\"\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={styles.friend_list}>\r\n            {friends.map(({ id, avatar, name, isOnline }) => (\r\n                <FriendListItem key={id} avatar={avatar} name={name} isOnline={isOnline}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n        }).isRequired\r\n    ),\r\n};\r\n\r\nexport default FriendList;","import PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\"\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n    return (\r\n    <table className={styles.transaction_history}>\r\n        <thead className={styles.transaction_head}>\r\n                <tr className={styles.transaction_row}>\r\n                <th className={styles.transaction_itemHead}>Type</th>\r\n                <th className={styles.transaction_itemHead}>Amount</th>\r\n                <th className={styles.transaction_itemHead}>Currency</th>\r\n            </tr>\r\n        </thead>\r\n            <tbody className={styles.transaction_table}>\r\n                {transactions.map(({ id, type, amount, currency }) =>\r\n                <tr className={styles.transaction_row} key={id}>   \r\n                    <td className={styles.transaction_item}>{type}</td>\r\n                    <td className={styles.transaction_item}>{amount}</td>\r\n                    <td className={styles.transaction_item}>{currency}</td>\r\n                </tr>\r\n                )}\r\n        </tbody>       \r\n    </table>\r\n    );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n    transactions: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        }).isRequired\r\n    ),\r\n};\r\n\r\nexport default TransactionHistory;","import profile from \"./data/user.json\"\nimport statisticalData from \"./data/statistical-data.json\"\nimport friends from \"./data/friends.json\"\nimport transactions from \"./data/transactions.json\"\n\nimport ProfilePage from \"./components/Profile/Profile\"\nimport StatisticPage from \"./components/Statistic/Statistic\"\nimport FriendList from \"./components/FriendList/FriendList\"\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\"\n\n\n\nconst App = () =>\n  <>\n    <ProfilePage name={profile.name} tag={profile.tag} location={profile.location} avatar={profile.avatar} stats={profile.stats} />\n    <StatisticPage title=\"Upload stats\" statisticalData={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory transactions={transactions} />\n  </>\n  \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}